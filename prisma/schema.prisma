// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account{
  id                Int @id @default(autoincrement())
  fullname          String? @db.VarChar(255) 
  telephone         String @db.VarChar(10) @unique
  email             String @db.VarChar(64) @unique
  password          String @db.VarChar(255)
  manager           Boolean @default(false)
  status            Boolean @default(true)
  deleted           Boolean @default(false)
  updated_at        DateTime @updatedAt
  created_at        DateTime @default(now())
  roles             RolesOnAccounts[]
  @@fulltext([fullname])
  @@fulltext([fullname, email])
  @@fulltext([fullname, email, telephone])
  @@map("tb_account")
}

model Role{
  id                Int @id @default(autoincrement())
  name              String @db.VarChar(255)
  status            Boolean @default(true)
  deleted           Boolean @default(false)
  updated_at        DateTime @updatedAt
  created_at        DateTime @default(now())
  code              String @db.Char(50)
  accounts          RolesOnAccounts[]
  permissions       PermissionsOnRoles[]
  @@map("tb_role")
}

model RolesOnAccounts {
  account           Account@relation(fields: [accountId], references: [id])
  accountId         Int
  role              Role@relation(fields: [roleId], references: [id])
  roleId            Int
  created_at        DateTime @default(now())
  @@id([accountId, roleId])
  @@map("tb_role_on_account")
}

model Permission{
  id                Int @id @default(autoincrement())
  name              String @db.Char(50)
  path              String @db.Char(100) @unique
  updated_at        DateTime @updatedAt
  created_at        DateTime @default(now())
  roles             PermissionsOnRoles[]
  @@map("tb_permission")
}

model PermissionsOnRoles{
  role              Role@relation(fields: [roleId], references: [id])
  roleId            Int
  permission        Permission@relation(fields: [permissionId], references: [id])
  permissionId      Int
  created_at        DateTime @default(now())
  @@id([roleId, permissionId])
  @@map("tb_permission_on_role")
}

model Media{
  id                Int @id @default(autoincrement())
  name              String @db.Char(250)
  file_name         String @db.Char(250)
  mime_type         String @db.Char(20)
  size              Int @db.Int()
  disk              String @db.Char(20)
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt
  original_url      String @db.Char(250)
  @@map("tb_media")
}

model Province{
  code            Int @id
  name            String @db.Char(250)
  division_type   String @db.Char(20)
  codename        String @db.Char(250)
  phone_code      Int @db.Int
  @@map("tb_province")
}

model District{
  code            Int @id
  name            String @db.Char(250)
  division_type   String @db.Char(20)
  codename        String @db.Char(250)
  province_code   Int @db.Int
  @@map("tb_district")
}

model Ward{
  code            Int @id
  name            String @db.Char(250)
  division_type   String @db.Char(20)
  codename        String @db.Char(250)
  district_code   Int @db.Int
  @@map("tb_ward")
}