// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account{
  id                Int @id @default(autoincrement())
  fullname          String? @db.VarChar(255) 
  telephone         String @db.VarChar(10) @unique
  email             String @db.VarChar(64) @unique
  password          String @db.VarChar(255)
  manager           Boolean @default(false)
  status            Boolean @default(true)
  deleted           Boolean @default(false)
  updated_at        DateTime @updatedAt
  created_at        DateTime @default(now())
  roles             RolesOnAccounts[]
  products          Product[]
  @@fulltext([fullname])
  @@fulltext([fullname, email])
  @@fulltext([fullname, email, telephone])
  @@map("tb_account")
}

model Role{
  id                Int @id @default(autoincrement())
  name              String @db.VarChar(255)
  status            Boolean @default(true)
  deleted           Boolean @default(false)
  updated_at        DateTime @updatedAt
  created_at        DateTime @default(now())
  code              String @db.Char(50)
  accounts          RolesOnAccounts[]
  permissions       PermissionsOnRoles[]
  @@map("tb_role")
}

model RolesOnAccounts {
  account           Account@relation(fields: [accountId], references: [id])
  accountId         Int
  role              Role@relation(fields: [roleId], references: [id])
  roleId            Int
  created_at        DateTime @default(now())
  @@id([accountId, roleId])
  @@map("tb_role_on_account")
}

model Permission{
  id                Int @id @default(autoincrement())
  name              String @db.Char(50)
  path              String @db.Char(100) @unique
  updated_at        DateTime @updatedAt
  created_at        DateTime @default(now())
  roles             PermissionsOnRoles[]
  @@map("tb_permission")
}

model PermissionsOnRoles{
  role              Role@relation(fields: [roleId], references: [id])
  roleId            Int
  permission        Permission@relation(fields: [permissionId], references: [id])
  permissionId      Int
  created_at        DateTime @default(now())
  @@id([roleId, permissionId])
  @@map("tb_permission_on_role")
}

model Media{
  id                Int @id @default(autoincrement())
  name              String @db.Char(250)
  file_name         String @db.Char(250)
  mime_type         String @db.Char(20)
  size              Int @db.Int()
  disk              String @db.Char(20)
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt
  original_url      String @db.Char(250)
  branch            Branch?
  product_media     ProductMedia?
  @@map("tb_media")
}

model Province{
  code              Int @id
  name              String @db.Char(250)
  division_type     String @db.Char(20)
  codename          String @db.Char(250)
  phone_code        Int @db.Int
  branches          Branch[]
  @@map("tb_province")
}

model District{
  code              Int @id
  name              String @db.Char(250)
  division_type     String @db.Char(20)
  codename          String @db.Char(250)
  province_code     Int @db.Int
  branches          Branch[]
  @@map("tb_district")
}

model Ward{
  code              Int @id
  name              String @db.Char(250)
  division_type     String @db.Char(20)
  codename          String @db.Char(250)
  district_code     Int @db.Int
  branches          Branch[]
  @@map("tb_ward")
}

model Branch{
  id                Int @id @default(autoincrement())
  name              String @db.VarChar(250)
  media             Media? @relation(fields: [media_id], references: [id])
  media_id          Int? @unique
  status            Boolean @default(true)
  deleted           Boolean @default(false)
  updated_at        DateTime @updatedAt
  created_at        DateTime @default(now())
  short_address     String? @db.VarChar(50)
  province          Province? @relation(fields: [province_code],references: [code])
  province_code     Int?
  district          District? @relation(fields: [district_code], references: [code])
  district_code     Int?
  ward              Ward? @relation(fields: [ward_code], references: [code])
  ward_code         Int?
  lat               Float?
  long              Float?
  hotline           String? @db.Char(20)
  email             String? @db.Char(50)
  @@map("tb_branch")
}

model Product{
  id                Int @id @default(autoincrement())
  name              String @db.VarChar(250)
  name_slugify      String @db.Char(250)
  price_original    Int @db.Int
  price             Int @db.Int
  price_special     Int @db.Int
  short_content     String? @db.VarChar(250)
  status            Boolean @default(true)
  deleted           Boolean @default(false)
  updated_at        DateTime @updatedAt
  created_at        DateTime @default(now())
  account           Account @relation(fields: [created_by_id], references: [id])
  created_by_id     Int
  media             ProductMedia[]
  @@map("tb_product")
  @@fulltext([name])
}

model ProductMedia{
  id                Int @id @default(autoincrement())
  product           Product @relation(fields: [product_id], references: [id])
  product_id        Int
  media             Media? @relation(fields: [media_id], references: [id])
  media_id          Int? @unique
  status            Boolean @default(true)
  deleted           Boolean @default(false)
  updated_at        DateTime @updatedAt
  created_at        DateTime @default(now())
  @@map("tb_product_media")
}